{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","console","log","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","error","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.517431f2.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\n\n\nconst SignedInLinks = (props) =>{\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut} >Log Out</a></li>\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\n            {props.profile.initials}</NavLink></li>\n        </ul>\n   )\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        signOut: ()=> dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials)=>{\n    return (dispatch, getState, {getFirebase})=>{\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=>{\n            dispatch({type: 'LOGIN_SUCCESS'});\n        }).catch((err)=>{\n            dispatch({type: 'LOGIN_ERROR', err});\n        })\n    }\n}\n\nexport const signOut=()=>{\n    return (dispatch, getState, {getFirebase})=>{\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(()=>{\n            dispatch({type: 'SIGNOUT_SUCCESS'});\n        });\n    }\n}\n\nexport const signUp=(newUser)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp)=>{\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0]+newUser.lastName[0]\n            })\n        }).then(()=>{\n            dispatch({type: 'SIGNUP_SUCCESS'})\n        }).catch(err=>{\n            dispatch({type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () =>{\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Signup</NavLink></li>\n            <li><NavLink to='/signin'>Log In</NavLink></li>\n        </ul>\n   )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) =>{\n    const {auth, profile} = props;\n    // console.log(auth);\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks/>\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n                { links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    // console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment'\n\nconst Notifications = (props) =>{\n    const { notifications } = props;\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">\n                        Notifications\n                    </span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(item =>{\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        }) }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) =>{\n\n    return(\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\n            <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n//    console.log(projects);\n    return (\n        <div className=\"project-list section\">\n            {/* Check for projects and if have then output */}\n            { projects && projects.map(project=>{\n                return (\n                    <Link to={'/project/' + project.id} key={project.id}>\n                        <ProjectSummary project={project}/>\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n    render(){\n        // console.log(this.props);\n        const {projects, auth, notifications} = this.props;\n\n        if(!auth.uid) return <Redirect to ='/signin' />\n\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        {/* Using destructuring to pass the props to next component */}\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    // console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\n        {collection: 'notifications', limit:3, orderBy: ['time', 'desc']}\n    ])\n)(Dashboard);","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n    if(!auth.uid) return <Redirect to ='/signin' />\n\n    if(project){\n        return(\n        <div className=\"container section project-deatils\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">{project.title}</span>\n                    <p>{ project.content }</p>\n                </div>\n                <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\n                    <div>{ moment(project.createdAt.toDate()).calendar() }</div>\n                </div>\n            </div>\n        </div>  \n        )  \n    }\n    return (\n        <div className=\"container center\">\n            <p>Loading project...</p>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, ownProps)=>{\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null\n    return  {\n        project: project,\n        auth: state.firebase.auth\n\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ]))(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email:'',\n        password: ''\n    }\n\n    handleChange = (e)=>{\n        this.setState({\n            // Find what field is being updated and update that state\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e)=>{\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    render() {\n        const { authError, auth } = this.props;\n        if(auth.uid) return <Redirect to ='/' />\n\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        signIn: (creds)=> dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email:'',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleChange = (e)=>{\n        this.setState({\n            // Find what field is being updated and update that state\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e)=>{\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signUp(this.state);\n    }\n\n    render() {\n        const { auth, authError } = this.props;\n        if(auth.uid) return <Redirect to ='/' />\n\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            {/* { authError ? <p>{ authError }</p> : null } */}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        auth: state.firebase.auth,\n        // authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        signUp: (newUser)=> dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n\n","import React, { Component } from 'react'\nimport { createProject } from '../../store/actions/projectActions'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title:'',\n        content: ''\n    }\n\n    handleChange = (e)=>{\n        this.setState({\n            // Find what field is being updated and update that state\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e)=>{\n        e.preventDefault();\n        // console.log(this.state);\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { auth } = this.props;\n        if(!auth.uid) return <Redirect to ='/signin' />\n\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state)=>{\n    return {\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) =>{\n    return {\n        createProject: (project)=>dispatch(createProject(project))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n\n","export const createProject = (project) => {\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        // make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n\n        firestore.collection('projects').add({\n            ...project, \n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(()=>{\n            dispatch({ type: 'CREATE_PROJECT', project});   \n        }).catch((err)=>{\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err});\n        })\n        \n    }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path =\"/\"  component={ Dashboard } />\n            <Route path=\"/project/:id\" component={ ProjectDetails }/>\n            <Route path=\"/signin\" component={ SignIn } />\n            <Route path=\"/signup\" component={ SignUp } />\n            <Route path=\"/create\" component={ CreateProject } />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\n\nconst authReducer =(state = initState, action)=>{\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n                console.log('signout success');\n                return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return{\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return{\n                ...state,\n                authError: action.error.message\n            }\n\n        default:\n           return state;\n    }\n}\n\nexport default authReducer","const initState = {\n    projects: [\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n    ]\n}\n\n\nconst projectReducer =(state = initState, action)=>{\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);    \n            return state;\n\n        case 'CREATE_PROJECT_ERROR':\n            console.log('created project error', action.err);    \n            return state;\n\n    \n        default:\n            return state\n\n    }\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer\n","  import firebase from 'firebase/app'\n  import 'firebase/firestore'\n  import 'firebase/auth'\n\n  \n  // Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: \"AIzaSyBLEM9_fyvtb0NTWILNquMRAe9V8FCOdHc\",\n    authDomain: \"net-ninja-marioplan-13aa6.firebaseapp.com\",\n    databaseURL: \"https://net-ninja-marioplan-13aa6.firebaseio.com\",\n    projectId: \"net-ninja-marioplan-13aa6\",\n    storageBucket: \"\",\n    messagingSenderId: \"178682575350\",\n    appId: \"1:178682575350:web:155c9193b2e4d54f\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({\n      timestampsInSnapshots: true\n  });\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n// Pass in route reducer\nconst store = createStore(rootReducer,\n    compose( \n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile:'users', attachAuthIsReady: true})\n        )\n    );\n\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n\n"],"sourceRoot":""}